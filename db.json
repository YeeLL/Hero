{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/maupassant/source/css/jquery.fancybox.css","path":"css/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/fancybox.js","path":"js/fancybox.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/share.js","path":"js/share.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/smartresize.js","path":"js/smartresize.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/maupassant/.travis.yml","hash":"0339959f29deddc365e8fe8bd85da524410b9a23","modified":1479018142000},{"_id":"themes/maupassant/_config.yml","hash":"8c21341a2876c2a1c9807be5e2c724a4e39166e3","modified":1479018142000},{"_id":"themes/maupassant/README.md","hash":"75d8c42569809961953d1934de445418c00ab94c","modified":1479018142000},{"_id":"themes/maupassant/LICENSE","hash":"019dc6a9aba02ae3aaabca45f39aecd6e8e7f1d8","modified":1479018142000},{"_id":"themes/maupassant/package.json","hash":"81fb4e2ac051ecfb9a93f37b28910291b939771a","modified":1479018142000},{"_id":"source/_posts/permission-0.md","hash":"01b705b030f64b1bfb73b83ff976f0385b8c2665","modified":1479015384000},{"_id":"themes/maupassant/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1479018142000},{"_id":"themes/maupassant/.git/config","hash":"037345b11c41abb3dbbbd6e0242ced24979a7097","modified":1479018142000},{"_id":"themes/maupassant/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1479018031000},{"_id":"themes/maupassant/.git/packed-refs","hash":"53e4275068b4dbaa003c4f6e8f4eeaa4ed2360d0","modified":1479018142000},{"_id":"themes/maupassant/.git/index","hash":"03b1f3e29b3e7bf4529515eefdfd0ef488ce60d3","modified":1479018142000},{"_id":"themes/maupassant/languages/de-DE.yml","hash":"5d3556a885e355a8c2da65ef3e7b3ee36a628bfa","modified":1479018142000},{"_id":"themes/maupassant/languages/en.yml","hash":"e13ab1a2d2f1edbe67b4c035fd4667cb6a31db8e","modified":1479018142000},{"_id":"themes/maupassant/languages/fr-FR.yml","hash":"b47906ec0abf867fb3e3360bc046b7afb68aee25","modified":1479018142000},{"_id":"themes/maupassant/languages/es-ES.yml","hash":"58e1d04bcd1834fa9d2960e18e027abbbccbedc9","modified":1479018142000},{"_id":"themes/maupassant/languages/zh-CN.yml","hash":"ebacfa5d0c14d603e0d505757adb24c0bbe5dd13","modified":1479018142000},{"_id":"themes/maupassant/languages/ko.yml","hash":"909a33e0befa6978e8e72157c6b415b48551ee31","modified":1479018142000},{"_id":"themes/maupassant/languages/zh-TW.yml","hash":"56b65995c60e99dcebbf00168447fd225d28e5b2","modified":1479018142000},{"_id":"themes/maupassant/layout/archive.jade","hash":"0050c883b4f202add71c8664d65e6072179e7190","modified":1479018142000},{"_id":"themes/maupassant/layout/base-without-sidebar.jade","hash":"1ad721de96784bf4253316b796db6200148d4152","modified":1479018142000},{"_id":"themes/maupassant/layout/index.jade","hash":"7466ce52023ed8a413a6b4461354a9e20e62fc14","modified":1479018142000},{"_id":"themes/maupassant/layout/post.jade","hash":"9cf29fb0daed95935154ce0fa2b154df5a9b11b1","modified":1479018142000},{"_id":"themes/maupassant/layout/base.jade","hash":"852c610ac392ef2fa130dbe73bcf4f96f423c869","modified":1479018142000},{"_id":"themes/maupassant/layout/timeline.jade","hash":"f03d8df63a188543cfe4e85e76194abe081411a1","modified":1479018142000},{"_id":"themes/maupassant/layout/page.jade","hash":"8d70fd3b93f2c9087a9ea7ec538dcc1d413bea01","modified":1479018142000},{"_id":"themes/maupassant/layout/single-column.jade","hash":"c35fff4d9b331a41af5bc10f4278ec3d9da503db","modified":1479018142000},{"_id":"themes/maupassant/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1479018031000},{"_id":"themes/maupassant/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1479018031000},{"_id":"themes/maupassant/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1479018031000},{"_id":"themes/maupassant/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1479018031000},{"_id":"themes/maupassant/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1479018031000},{"_id":"themes/maupassant/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1479018031000},{"_id":"themes/maupassant/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1479018031000},{"_id":"themes/maupassant/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1479018031000},{"_id":"themes/maupassant/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1479018031000},{"_id":"themes/maupassant/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1479018031000},{"_id":"themes/maupassant/.git/logs/HEAD","hash":"f4894733bba6624cef7a9172e7782a044ae5cf93","modified":1479018142000},{"_id":"themes/maupassant/layout/_partial/after_footer.jade","hash":"3dbcc9a9f0d6e55da191d3393c18bbfcfe99fa69","modified":1479018142000},{"_id":"themes/maupassant/layout/_partial/comments.jade","hash":"6c7f63ba04a4d28323ba31e79a4927f3d3fcc56e","modified":1479018142000},{"_id":"themes/maupassant/layout/_partial/helpers.jade","hash":"acdf9e2d52ee86c831fa15ce1570930c5779bc78","modified":1479018142000},{"_id":"themes/maupassant/layout/_partial/footer.jade","hash":"aa020b794e697e8e9612530c97c6295efde469fe","modified":1479018142000},{"_id":"themes/maupassant/layout/_partial/mathjax.jade","hash":"b54b56faff9e47ab3ca3cdd55056c73e60776f3c","modified":1479018142000},{"_id":"themes/maupassant/layout/_partial/mathjax2.jade","hash":"d6ac5dc4e9c7a1b866f1f92d88988cfb35aded4c","modified":1479018142000},{"_id":"themes/maupassant/layout/_partial/tag.jade","hash":"0f0e6770e9d5dd8040e330d71bbbfadd2df36a28","modified":1479018142000},{"_id":"themes/maupassant/layout/_partial/post_nav.jade","hash":"a2d698c84bb6da08195fe870dbd7215f65388d3f","modified":1479018142000},{"_id":"themes/maupassant/layout/_partial/totop.jade","hash":"8225bbc3cdb9648bc2e6872e5c616a9a1e4def4f","modified":1479018142000},{"_id":"themes/maupassant/layout/_partial/paginator.jade","hash":"53f9cb77448e84a98da5eb688e2e12b173c555bb","modified":1479018142000},{"_id":"themes/maupassant/layout/_widget/category.jade","hash":"7c6aed762934ca51aa2669b886254da24b77bc14","modified":1479018142000},{"_id":"themes/maupassant/layout/_widget/search.jade","hash":"193546282908e499813534f86d27ef6e0a1357b3","modified":1479018142000},{"_id":"themes/maupassant/layout/_widget/recent_comments.jade","hash":"e119c5afa85abc60d139e2da99b0bfcd7a6530f8","modified":1479018142000},{"_id":"themes/maupassant/layout/_widget/links.jade","hash":"f57a0c76d243882b2b77330132bdb43bc648948b","modified":1479018142000},{"_id":"themes/maupassant/layout/_widget/recent_posts.jade","hash":"19431336d724d2118e46da43683bce9063176541","modified":1479018142000},{"_id":"themes/maupassant/layout/_widget/tag.jade","hash":"132f049ce677d0e38f50073174c4ee4b825d4a06","modified":1479018142000},{"_id":"themes/maupassant/source/css/jquery.fancybox.css","hash":"f42f761157f26244673eb2f4a9215c70956f80dc","modified":1479018142000},{"_id":"themes/maupassant/source/css/style.scss","hash":"158f1ebecf7b994ffae5332a627465f6bf38113b","modified":1479018142000},{"_id":"themes/maupassant/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1479018142000},{"_id":"themes/maupassant/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1479018142000},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1479018142000},{"_id":"themes/maupassant/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1479018142000},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1479018142000},{"_id":"themes/maupassant/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1479018142000},{"_id":"themes/maupassant/source/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1479018142000},{"_id":"themes/maupassant/source/js/search.js","hash":"53db2eb255dd40a412ed62ea7332ca5a22f7816f","modified":1479018142000},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1479018142000},{"_id":"themes/maupassant/source/js/share.js","hash":"f49776e0baa2b913ddc7a20db24b3edd469c8343","modified":1479018142000},{"_id":"themes/maupassant/source/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1479018142000},{"_id":"themes/maupassant/source/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1479018142000},{"_id":"themes/maupassant/.git/refs/heads/master","hash":"9138f76c9461186fe7e14add27270f388fdabe2f","modified":1479018142000},{"_id":"themes/maupassant/.git/objects/pack/pack-e7cf019b13db06c00e956f23565138b3085dba01.idx","hash":"494a352d63726097f521c14dfa56cb8c35a0bf8c","modified":1479018142000},{"_id":"themes/maupassant/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1479018142000},{"_id":"themes/maupassant/.git/logs/refs/heads/master","hash":"f4894733bba6624cef7a9172e7782a044ae5cf93","modified":1479018142000},{"_id":"themes/maupassant/.git/logs/refs/remotes/origin/HEAD","hash":"f4894733bba6624cef7a9172e7782a044ae5cf93","modified":1479018142000},{"_id":"themes/maupassant/.git/objects/pack/pack-e7cf019b13db06c00e956f23565138b3085dba01.pack","hash":"2628f25ffb5ae14bb965b2571be844159242f710","modified":1479018142000},{"_id":"public/2016/11/13/permission-0/index.html","hash":"8c01f8445c18afbe820c7384d736108451d45f1d","modified":1479019911513},{"_id":"public/index.html","hash":"4552363e868bc54079f6e5649f4b3f4494cc9754","modified":1479019911514},{"_id":"public/archives/index.html","hash":"5ee93f9b006f9590ea59ba9f648f0fc08db643aa","modified":1479019911513},{"_id":"public/archives/2016/index.html","hash":"5ee93f9b006f9590ea59ba9f648f0fc08db643aa","modified":1479019911514},{"_id":"public/archives/2016/11/index.html","hash":"5ee93f9b006f9590ea59ba9f648f0fc08db643aa","modified":1479019911514},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1479019432841},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1479019432841},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1479019432841},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1479019432841},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1479019432841},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1479019432841},{"_id":"public/css/jquery.fancybox.css","hash":"f42f761157f26244673eb2f4a9215c70956f80dc","modified":1479019432868},{"_id":"public/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1479019432868},{"_id":"public/js/search.js","hash":"53db2eb255dd40a412ed62ea7332ca5a22f7816f","modified":1479019432868},{"_id":"public/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1479019432868},{"_id":"public/js/share.js","hash":"f49776e0baa2b913ddc7a20db24b3edd469c8343","modified":1479019432868},{"_id":"public/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1479019432868},{"_id":"public/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1479019432868},{"_id":"public/css/style.css","hash":"2afb6e7e24abf81c8b7b7d472fb0bb9b9a1eac16","modified":1479019432868}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Android 动态权限管理","date":"2016-11-13T05:19:27.000Z","_content":"从Android 6.0（API级别23）开始，用户在应用运行时（而不是在安装应用时）向应用授予权限。 此方法简化了应用安装过程，因为用户在安装或更新应用时不需要授予权限。 它还给用户更多的控制应用程序的功能; 例如，用户可以选择给摄像机应用访问摄像机而不是设备位置。 用户可以随时通过转到应用的设置屏幕撤消权限。<!--more-->\n\n### 随着Android6.0的普及，我们不得不做的一件事情就是关于运行时权限管理的事情。\n\n## 1.什么叫运行时权限管理？\n比如说，我们在app中打开相机的预览的功能的时候，我们的手机就会弹出一个提示框，提醒用户是否允许我们的app使用相机（也就是提供相机的权限）。这就相机权限就叫运行时权限，简而言之就是我们当我们需要某一项功能的时候所需要的权限。\n\n## 2.Android6.0之后我们为什么需要管理动态权限？\n就如上面所说的例子，当我们的用户不小心或者就是不想给相机权限时，我们的app就不能正常工作。所以这个时候我们就需要给用户一些友好的提示，或者最少不让app崩溃。这个时候我们就需要管理运行时权限了。\n\n\n## 3.在Android中如何加入运行权限管理？[API地址](https://developer.android.com/reference/android/support/v4/content/PermissionChecker.html)  \n运行时权限管理在代码中主要依靠几个类和几个方法来完成  \n1.PermissionChecker类（最主要的类）  \n主要提供检测权限的方法 \n\n2.PermissionChecker.checkSelfPermission(context,permission）（主要的方法）   \n用于检测当前是否有permission这个权限。                               \n主要返回3个值:(是个int类型的值)   \n* PERMISSION_GRANTED(0 (0x00000000)):有此权限   \n* PERMISSION_DENIED（-1 (0xffffffff)）: 没有此权限  \n* PERMISSION_DENIED_APP_OP （-2 (0xfffffffe)）:  权限被拒绝，因为不允许应用操作   \n\n3.context.shouldShowRequestPermissionRationale(permission)  \n这个方法主要用来获取是否应该显示具有请求权限的理由的UI。具体就是，这个方法会告诉你是否可以通过请求来显示友好的权限申请框。它会返回一个boolean值。   \n＊ true：表示可以申请。\n＊ false：表示不可以申请。（如果不能申请，就可以自己做一些事情）\n\n4.requestPermissions(@NonNull String[] permissions, int requestCode)      \n申请请求一组权限，此方法可以一次申请多个权限，通过OnRequestPermissionsResultCallback方法获得用户操作后的权限状态\n\n5.OnRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults)这个方法用于接受申请权限后用户对权限操作的结果，可以看出来结果和权限时以一对的形式出现的。比如说permission[0] 对应grantResults[0],以此类推。\ngrantRsults的值也是3种类型和2中返回的类型是相同的，我们只需要对不同的类型进行判断就行了。\n\n## 4.说再多都不如看代码\n\n```java    \n  /**\n     * Activity\n     * 判断权限\n     * 主要判断权限6.0以上的机型\n     * 需要在调用此方法的类中实现 onRequestPermissionsResult\n     */\n    @TargetApi(Build.VERSION_CODES.M)\n    public static void openMyActivityPermission(Activity context, String permission,int requestCode){\n        int result = PermissionChecker.checkSelfPermission(context,permission);\n        if (result == PermissionChecker.PERMISSION_GRANTED){\n            //有权限\n        }else {\n            //没有权限\n            //判断能否显示系统弹框\n            boolean isShow = context.shouldShowRequestPermissionRationale(permission);\n            if (!isShow){\n                //不能显示系统弹框，这里只能手动提示用户\n            }else {\n                //帮用户弹出系统弹框\n                context.requestPermissions(new String[]{permission},requestCode);\n            }\n        }\n    }\n    \n    //用户选择后回调\n    @Override\n    public void onRequestPermissionsResult(int requestCode,@NonNull String[] permissions, @NonNull int[] grantResults) {\n        super.onRequestPermissionsResult(requestCode,permissions, grantResults);\n    }   \n```\n\n### 5.再说运行时权限管理\n这个运行时权限管理是goole6.0的加入的一个东西。但是在碎片化极其严重的android中，不可能只有6.0的手机。所以仅仅靠6.0是不现实的。所以我们还要更多的考虑6.0以下的权限适配问题。由于各个厂家的深度定制（鸡肋～～～），很多厂家都自己实现了运行时权限提醒等一系列温馨的功能（各种奇葩～～），所以这时就需要我们开发者自己想办法解决这些问题。   \n\n比如说6.0以下我们需要相机这个权限，但是用户在安装app的时候没有勾选相机权限，或者当弹出权限询问框的时候用户点击了禁止我们该怎么办。目前我知道的就只有try catch来解决这个问题。\n\n\n对于运行时权限问题就到这里，此文仅当记录自己遇到的坑～～～如有问题请予以纠正。谢谢。","source":"_posts/permission-0.md","raw":"---\ntitle: Android 动态权限管理\ndate: 2016-11-13 13:19:27\ntags:\n---\n从Android 6.0（API级别23）开始，用户在应用运行时（而不是在安装应用时）向应用授予权限。 此方法简化了应用安装过程，因为用户在安装或更新应用时不需要授予权限。 它还给用户更多的控制应用程序的功能; 例如，用户可以选择给摄像机应用访问摄像机而不是设备位置。 用户可以随时通过转到应用的设置屏幕撤消权限。<!--more-->\n\n### 随着Android6.0的普及，我们不得不做的一件事情就是关于运行时权限管理的事情。\n\n## 1.什么叫运行时权限管理？\n比如说，我们在app中打开相机的预览的功能的时候，我们的手机就会弹出一个提示框，提醒用户是否允许我们的app使用相机（也就是提供相机的权限）。这就相机权限就叫运行时权限，简而言之就是我们当我们需要某一项功能的时候所需要的权限。\n\n## 2.Android6.0之后我们为什么需要管理动态权限？\n就如上面所说的例子，当我们的用户不小心或者就是不想给相机权限时，我们的app就不能正常工作。所以这个时候我们就需要给用户一些友好的提示，或者最少不让app崩溃。这个时候我们就需要管理运行时权限了。\n\n\n## 3.在Android中如何加入运行权限管理？[API地址](https://developer.android.com/reference/android/support/v4/content/PermissionChecker.html)  \n运行时权限管理在代码中主要依靠几个类和几个方法来完成  \n1.PermissionChecker类（最主要的类）  \n主要提供检测权限的方法 \n\n2.PermissionChecker.checkSelfPermission(context,permission）（主要的方法）   \n用于检测当前是否有permission这个权限。                               \n主要返回3个值:(是个int类型的值)   \n* PERMISSION_GRANTED(0 (0x00000000)):有此权限   \n* PERMISSION_DENIED（-1 (0xffffffff)）: 没有此权限  \n* PERMISSION_DENIED_APP_OP （-2 (0xfffffffe)）:  权限被拒绝，因为不允许应用操作   \n\n3.context.shouldShowRequestPermissionRationale(permission)  \n这个方法主要用来获取是否应该显示具有请求权限的理由的UI。具体就是，这个方法会告诉你是否可以通过请求来显示友好的权限申请框。它会返回一个boolean值。   \n＊ true：表示可以申请。\n＊ false：表示不可以申请。（如果不能申请，就可以自己做一些事情）\n\n4.requestPermissions(@NonNull String[] permissions, int requestCode)      \n申请请求一组权限，此方法可以一次申请多个权限，通过OnRequestPermissionsResultCallback方法获得用户操作后的权限状态\n\n5.OnRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults)这个方法用于接受申请权限后用户对权限操作的结果，可以看出来结果和权限时以一对的形式出现的。比如说permission[0] 对应grantResults[0],以此类推。\ngrantRsults的值也是3种类型和2中返回的类型是相同的，我们只需要对不同的类型进行判断就行了。\n\n## 4.说再多都不如看代码\n\n```java    \n  /**\n     * Activity\n     * 判断权限\n     * 主要判断权限6.0以上的机型\n     * 需要在调用此方法的类中实现 onRequestPermissionsResult\n     */\n    @TargetApi(Build.VERSION_CODES.M)\n    public static void openMyActivityPermission(Activity context, String permission,int requestCode){\n        int result = PermissionChecker.checkSelfPermission(context,permission);\n        if (result == PermissionChecker.PERMISSION_GRANTED){\n            //有权限\n        }else {\n            //没有权限\n            //判断能否显示系统弹框\n            boolean isShow = context.shouldShowRequestPermissionRationale(permission);\n            if (!isShow){\n                //不能显示系统弹框，这里只能手动提示用户\n            }else {\n                //帮用户弹出系统弹框\n                context.requestPermissions(new String[]{permission},requestCode);\n            }\n        }\n    }\n    \n    //用户选择后回调\n    @Override\n    public void onRequestPermissionsResult(int requestCode,@NonNull String[] permissions, @NonNull int[] grantResults) {\n        super.onRequestPermissionsResult(requestCode,permissions, grantResults);\n    }   \n```\n\n### 5.再说运行时权限管理\n这个运行时权限管理是goole6.0的加入的一个东西。但是在碎片化极其严重的android中，不可能只有6.0的手机。所以仅仅靠6.0是不现实的。所以我们还要更多的考虑6.0以下的权限适配问题。由于各个厂家的深度定制（鸡肋～～～），很多厂家都自己实现了运行时权限提醒等一系列温馨的功能（各种奇葩～～），所以这时就需要我们开发者自己想办法解决这些问题。   \n\n比如说6.0以下我们需要相机这个权限，但是用户在安装app的时候没有勾选相机权限，或者当弹出权限询问框的时候用户点击了禁止我们该怎么办。目前我知道的就只有try catch来解决这个问题。\n\n\n对于运行时权限问题就到这里，此文仅当记录自己遇到的坑～～～如有问题请予以纠正。谢谢。","slug":"permission-0","published":1,"updated":"2016-11-13T05:36:24.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"civg9zdga000053p5qhqwnn5d","content":"<p>从Android 6.0（API级别23）开始，用户在应用运行时（而不是在安装应用时）向应用授予权限。 此方法简化了应用安装过程，因为用户在安装或更新应用时不需要授予权限。 它还给用户更多的控制应用程序的功能; 例如，用户可以选择给摄像机应用访问摄像机而不是设备位置。 用户可以随时通过转到应用的设置屏幕撤消权限。<a id=\"more\"></a></p>\n<h3 id=\"随着Android6-0的普及，我们不得不做的一件事情就是关于运行时权限管理的事情。\"><a href=\"#随着Android6-0的普及，我们不得不做的一件事情就是关于运行时权限管理的事情。\" class=\"headerlink\" title=\"随着Android6.0的普及，我们不得不做的一件事情就是关于运行时权限管理的事情。\"></a>随着Android6.0的普及，我们不得不做的一件事情就是关于运行时权限管理的事情。</h3><h2 id=\"1-什么叫运行时权限管理？\"><a href=\"#1-什么叫运行时权限管理？\" class=\"headerlink\" title=\"1.什么叫运行时权限管理？\"></a>1.什么叫运行时权限管理？</h2><p>比如说，我们在app中打开相机的预览的功能的时候，我们的手机就会弹出一个提示框，提醒用户是否允许我们的app使用相机（也就是提供相机的权限）。这就相机权限就叫运行时权限，简而言之就是我们当我们需要某一项功能的时候所需要的权限。</p>\n<h2 id=\"2-Android6-0之后我们为什么需要管理动态权限？\"><a href=\"#2-Android6-0之后我们为什么需要管理动态权限？\" class=\"headerlink\" title=\"2.Android6.0之后我们为什么需要管理动态权限？\"></a>2.Android6.0之后我们为什么需要管理动态权限？</h2><p>就如上面所说的例子，当我们的用户不小心或者就是不想给相机权限时，我们的app就不能正常工作。所以这个时候我们就需要给用户一些友好的提示，或者最少不让app崩溃。这个时候我们就需要管理运行时权限了。</p>\n<h2 id=\"3-在Android中如何加入运行权限管理？API地址\"><a href=\"#3-在Android中如何加入运行权限管理？API地址\" class=\"headerlink\" title=\"3.在Android中如何加入运行权限管理？API地址\"></a>3.在Android中如何加入运行权限管理？<a href=\"https://developer.android.com/reference/android/support/v4/content/PermissionChecker.html\" target=\"_blank\" rel=\"external\">API地址</a></h2><p>运行时权限管理在代码中主要依靠几个类和几个方法来完成<br>1.PermissionChecker类（最主要的类）<br>主要提供检测权限的方法 </p>\n<p>2.PermissionChecker.checkSelfPermission(context,permission）（主要的方法）<br>用于检测当前是否有permission这个权限。<br>主要返回3个值:(是个int类型的值)   </p>\n<ul>\n<li>PERMISSION_GRANTED(0 (0x00000000)):有此权限   </li>\n<li>PERMISSION_DENIED（-1 (0xffffffff)）: 没有此权限  </li>\n<li>PERMISSION_DENIED_APP_OP （-2 (0xfffffffe)）:  权限被拒绝，因为不允许应用操作   </li>\n</ul>\n<p>3.context.shouldShowRequestPermissionRationale(permission)<br>这个方法主要用来获取是否应该显示具有请求权限的理由的UI。具体就是，这个方法会告诉你是否可以通过请求来显示友好的权限申请框。它会返回一个boolean值。<br>＊ true：表示可以申请。<br>＊ false：表示不可以申请。（如果不能申请，就可以自己做一些事情）</p>\n<p>4.requestPermissions(@NonNull String[] permissions, int requestCode)<br>申请请求一组权限，此方法可以一次申请多个权限，通过OnRequestPermissionsResultCallback方法获得用户操作后的权限状态</p>\n<p>5.OnRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults)这个方法用于接受申请权限后用户对权限操作的结果，可以看出来结果和权限时以一对的形式出现的。比如说permission[0] 对应grantResults[0],以此类推。<br>grantRsults的值也是3种类型和2中返回的类型是相同的，我们只需要对不同的类型进行判断就行了。</p>\n<h2 id=\"4-说再多都不如看代码\"><a href=\"#4-说再多都不如看代码\" class=\"headerlink\" title=\"4.说再多都不如看代码\"></a>4.说再多都不如看代码</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\">   * Activity</div><div class=\"line\">   * 判断权限</div><div class=\"line\">   * 主要判断权限6.0以上的机型</div><div class=\"line\">   * 需要在调用此方法的类中实现 onRequestPermissionsResult</div><div class=\"line\">   */</div><div class=\"line\">  <span class=\"meta\">@TargetApi</span>(Build.VERSION_CODES.M)</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">openMyActivityPermission</span><span class=\"params\">(Activity context, String permission,<span class=\"keyword\">int</span> requestCode)</span></span>&#123;</div><div class=\"line\">      <span class=\"keyword\">int</span> result = PermissionChecker.checkSelfPermission(context,permission);</div><div class=\"line\">      <span class=\"keyword\">if</span> (result == PermissionChecker.PERMISSION_GRANTED)&#123;</div><div class=\"line\">          <span class=\"comment\">//有权限</span></div><div class=\"line\">      &#125;<span class=\"keyword\">else</span> &#123;</div><div class=\"line\">          <span class=\"comment\">//没有权限</span></div><div class=\"line\">          <span class=\"comment\">//判断能否显示系统弹框</span></div><div class=\"line\">          <span class=\"keyword\">boolean</span> isShow = context.shouldShowRequestPermissionRationale(permission);</div><div class=\"line\">          <span class=\"keyword\">if</span> (!isShow)&#123;</div><div class=\"line\">              <span class=\"comment\">//不能显示系统弹框，这里只能手动提示用户</span></div><div class=\"line\">          &#125;<span class=\"keyword\">else</span> &#123;</div><div class=\"line\">              <span class=\"comment\">//帮用户弹出系统弹框</span></div><div class=\"line\">              context.requestPermissions(<span class=\"keyword\">new</span> String[]&#123;permission&#125;,requestCode);</div><div class=\"line\">          &#125;</div><div class=\"line\">      &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//用户选择后回调</span></div><div class=\"line\">  <span class=\"meta\">@Override</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onRequestPermissionsResult</span><span class=\"params\">(<span class=\"keyword\">int</span> requestCode,@NonNull String[] permissions, @NonNull <span class=\"keyword\">int</span>[] grantResults)</span> </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">super</span>.onRequestPermissionsResult(requestCode,permissions, grantResults);</div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"5-再说运行时权限管理\"><a href=\"#5-再说运行时权限管理\" class=\"headerlink\" title=\"5.再说运行时权限管理\"></a>5.再说运行时权限管理</h3><p>这个运行时权限管理是goole6.0的加入的一个东西。但是在碎片化极其严重的android中，不可能只有6.0的手机。所以仅仅靠6.0是不现实的。所以我们还要更多的考虑6.0以下的权限适配问题。由于各个厂家的深度定制（鸡肋～～～），很多厂家都自己实现了运行时权限提醒等一系列温馨的功能（各种奇葩～～），所以这时就需要我们开发者自己想办法解决这些问题。   </p>\n<p>比如说6.0以下我们需要相机这个权限，但是用户在安装app的时候没有勾选相机权限，或者当弹出权限询问框的时候用户点击了禁止我们该怎么办。目前我知道的就只有try catch来解决这个问题。</p>\n<p>对于运行时权限问题就到这里，此文仅当记录自己遇到的坑～～～如有问题请予以纠正。谢谢。</p>\n","excerpt":"<p>从Android 6.0（API级别23）开始，用户在应用运行时（而不是在安装应用时）向应用授予权限。 此方法简化了应用安装过程，因为用户在安装或更新应用时不需要授予权限。 它还给用户更多的控制应用程序的功能; 例如，用户可以选择给摄像机应用访问摄像机而不是设备位置。 用户可以随时通过转到应用的设置屏幕撤消权限。","more":"</p>\n<h3 id=\"随着Android6-0的普及，我们不得不做的一件事情就是关于运行时权限管理的事情。\"><a href=\"#随着Android6-0的普及，我们不得不做的一件事情就是关于运行时权限管理的事情。\" class=\"headerlink\" title=\"随着Android6.0的普及，我们不得不做的一件事情就是关于运行时权限管理的事情。\"></a>随着Android6.0的普及，我们不得不做的一件事情就是关于运行时权限管理的事情。</h3><h2 id=\"1-什么叫运行时权限管理？\"><a href=\"#1-什么叫运行时权限管理？\" class=\"headerlink\" title=\"1.什么叫运行时权限管理？\"></a>1.什么叫运行时权限管理？</h2><p>比如说，我们在app中打开相机的预览的功能的时候，我们的手机就会弹出一个提示框，提醒用户是否允许我们的app使用相机（也就是提供相机的权限）。这就相机权限就叫运行时权限，简而言之就是我们当我们需要某一项功能的时候所需要的权限。</p>\n<h2 id=\"2-Android6-0之后我们为什么需要管理动态权限？\"><a href=\"#2-Android6-0之后我们为什么需要管理动态权限？\" class=\"headerlink\" title=\"2.Android6.0之后我们为什么需要管理动态权限？\"></a>2.Android6.0之后我们为什么需要管理动态权限？</h2><p>就如上面所说的例子，当我们的用户不小心或者就是不想给相机权限时，我们的app就不能正常工作。所以这个时候我们就需要给用户一些友好的提示，或者最少不让app崩溃。这个时候我们就需要管理运行时权限了。</p>\n<h2 id=\"3-在Android中如何加入运行权限管理？API地址\"><a href=\"#3-在Android中如何加入运行权限管理？API地址\" class=\"headerlink\" title=\"3.在Android中如何加入运行权限管理？API地址\"></a>3.在Android中如何加入运行权限管理？<a href=\"https://developer.android.com/reference/android/support/v4/content/PermissionChecker.html\">API地址</a></h2><p>运行时权限管理在代码中主要依靠几个类和几个方法来完成<br>1.PermissionChecker类（最主要的类）<br>主要提供检测权限的方法 </p>\n<p>2.PermissionChecker.checkSelfPermission(context,permission）（主要的方法）<br>用于检测当前是否有permission这个权限。<br>主要返回3个值:(是个int类型的值)   </p>\n<ul>\n<li>PERMISSION_GRANTED(0 (0x00000000)):有此权限   </li>\n<li>PERMISSION_DENIED（-1 (0xffffffff)）: 没有此权限  </li>\n<li>PERMISSION_DENIED_APP_OP （-2 (0xfffffffe)）:  权限被拒绝，因为不允许应用操作   </li>\n</ul>\n<p>3.context.shouldShowRequestPermissionRationale(permission)<br>这个方法主要用来获取是否应该显示具有请求权限的理由的UI。具体就是，这个方法会告诉你是否可以通过请求来显示友好的权限申请框。它会返回一个boolean值。<br>＊ true：表示可以申请。<br>＊ false：表示不可以申请。（如果不能申请，就可以自己做一些事情）</p>\n<p>4.requestPermissions(@NonNull String[] permissions, int requestCode)<br>申请请求一组权限，此方法可以一次申请多个权限，通过OnRequestPermissionsResultCallback方法获得用户操作后的权限状态</p>\n<p>5.OnRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults)这个方法用于接受申请权限后用户对权限操作的结果，可以看出来结果和权限时以一对的形式出现的。比如说permission[0] 对应grantResults[0],以此类推。<br>grantRsults的值也是3种类型和2中返回的类型是相同的，我们只需要对不同的类型进行判断就行了。</p>\n<h2 id=\"4-说再多都不如看代码\"><a href=\"#4-说再多都不如看代码\" class=\"headerlink\" title=\"4.说再多都不如看代码\"></a>4.说再多都不如看代码</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\">   * Activity</div><div class=\"line\">   * 判断权限</div><div class=\"line\">   * 主要判断权限6.0以上的机型</div><div class=\"line\">   * 需要在调用此方法的类中实现 onRequestPermissionsResult</div><div class=\"line\">   */</span></div><div class=\"line\">  <span class=\"meta\">@TargetApi</span>(Build.VERSION_CODES.M)</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">openMyActivityPermission</span><span class=\"params\">(Activity context, String permission,<span class=\"keyword\">int</span> requestCode)</span></span>&#123;</div><div class=\"line\">      <span class=\"keyword\">int</span> result = PermissionChecker.checkSelfPermission(context,permission);</div><div class=\"line\">      <span class=\"keyword\">if</span> (result == PermissionChecker.PERMISSION_GRANTED)&#123;</div><div class=\"line\">          <span class=\"comment\">//有权限</span></div><div class=\"line\">      &#125;<span class=\"keyword\">else</span> &#123;</div><div class=\"line\">          <span class=\"comment\">//没有权限</span></div><div class=\"line\">          <span class=\"comment\">//判断能否显示系统弹框</span></div><div class=\"line\">          <span class=\"keyword\">boolean</span> isShow = context.shouldShowRequestPermissionRationale(permission);</div><div class=\"line\">          <span class=\"keyword\">if</span> (!isShow)&#123;</div><div class=\"line\">              <span class=\"comment\">//不能显示系统弹框，这里只能手动提示用户</span></div><div class=\"line\">          &#125;<span class=\"keyword\">else</span> &#123;</div><div class=\"line\">              <span class=\"comment\">//帮用户弹出系统弹框</span></div><div class=\"line\">              context.requestPermissions(<span class=\"keyword\">new</span> String[]&#123;permission&#125;,requestCode);</div><div class=\"line\">          &#125;</div><div class=\"line\">      &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\">//用户选择后回调</span></div><div class=\"line\">  <span class=\"meta\">@Override</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onRequestPermissionsResult</span><span class=\"params\">(<span class=\"keyword\">int</span> requestCode,@NonNull String[] permissions, @NonNull <span class=\"keyword\">int</span>[] grantResults)</span> </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">super</span>.onRequestPermissionsResult(requestCode,permissions, grantResults);</div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"5-再说运行时权限管理\"><a href=\"#5-再说运行时权限管理\" class=\"headerlink\" title=\"5.再说运行时权限管理\"></a>5.再说运行时权限管理</h3><p>这个运行时权限管理是goole6.0的加入的一个东西。但是在碎片化极其严重的android中，不可能只有6.0的手机。所以仅仅靠6.0是不现实的。所以我们还要更多的考虑6.0以下的权限适配问题。由于各个厂家的深度定制（鸡肋～～～），很多厂家都自己实现了运行时权限提醒等一系列温馨的功能（各种奇葩～～），所以这时就需要我们开发者自己想办法解决这些问题。   </p>\n<p>比如说6.0以下我们需要相机这个权限，但是用户在安装app的时候没有勾选相机权限，或者当弹出权限询问框的时候用户点击了禁止我们该怎么办。目前我知道的就只有try catch来解决这个问题。</p>\n<p>对于运行时权限问题就到这里，此文仅当记录自己遇到的坑～～～如有问题请予以纠正。谢谢。</p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}